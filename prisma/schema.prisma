generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  CANDIDATE
  COMPANY
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String   @unique
  password  String
  role      Role
  profile   Json
  chatIds   String[] @map("chat_ids") @db.ObjectId
  createdAt DateTime @default(now()) @map("created_at")

  sentLikes     Like[]    @relation("SentLikes")
  receivedLikes Like[]    @relation("ReceivedLikes")
  chats         Chat[]    @relation("UserChats", fields: [chatIds], references: [id])
  messages      Message[] @relation("SentMessages")

  @@map("users")
}

model Like {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  fromId    String   @map("from_id") @db.ObjectId
  toId      String   @map("to_id") @db.ObjectId
  createdAt DateTime @default(now()) @map("created_at")

  fromUser User @relation("SentLikes", fields: [fromId], references: [id])
  toUser   User @relation("ReceivedLikes", fields: [toId], references: [id])

  @@unique([fromId, toId])
  @@map("likes")
}

model Chat {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  userIds       String[] @map("user_ids") @db.ObjectId
  lastMessageAt DateTime @default(now()) @map("last_message_at")
  createdAt     DateTime @default(now()) @map("created_at")

  users    User[]    @relation("UserChats", fields: [userIds], references: [id])
  messages Message[] @relation("ChatMessages")

  @@map("chats")
}

model Message {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  chatId    String   @map("chat_id") @db.ObjectId
  senderId  String   @map("sender_id") @db.ObjectId
  content   String
  read      Boolean  @default(false)
  createdAt DateTime @default(now()) @map("created_at")

  sender User @relation("SentMessages", fields: [senderId], references: [id])
  chat   Chat @relation("ChatMessages", fields: [chatId], references: [id])

  @@map("messages")
}
